
# SOULFRIEND V2.0 - Nginx Load Balancer Configuration

events {
    worker_connections 1024;
}

http {
    upstream soulfriend_app {
        least_conn;
        server soulfriend-app-1:8501 max_fails=3 fail_timeout=30s;
        server soulfriend-app-2:8501 max_fails=3 fail_timeout=30s;
        server soulfriend-app-3:8501 max_fails=3 fail_timeout=30s;
    }

    upstream soulfriend_dashboards {
        least_conn;
        server soulfriend-app-1:8502 max_fails=3 fail_timeout=30s;
        server soulfriend-app-1:8503 max_fails=3 fail_timeout=30s;
        server soulfriend-app-1:8504 max_fails=3 fail_timeout=30s;
        server soulfriend-app-1:8505 max_fails=3 fail_timeout=30s;
        server soulfriend-app-1:8506 max_fails=3 fail_timeout=30s;
    }

    upstream soulfriend_api {
        least_conn;
        server soulfriend-app-1:8507 max_fails=3 fail_timeout=30s;
        server soulfriend-app-2:8507 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=app:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Main application
    server {
        listen 80;
        server_name soulfriend.example.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name soulfriend.example.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;

        # Main app
        location / {
            limit_req zone=app burst=20 nodelay;
            proxy_pass http://soulfriend_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Dashboard routes
        location /dashboard/ {
            limit_req zone=app burst=10 nodelay;
            proxy_pass http://soulfriend_dashboards/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://soulfriend_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
